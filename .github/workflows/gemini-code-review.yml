name: Gemini Code Review

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [ main, master, develop ]

jobs:
  code-review:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Gemini CLI
      run: |
        npm install -g @google/generative-ai
        npm install -g gemini-cli
        
    - name: Get changed files
      id: changed-files
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          # For pull requests, compare with base branch
          git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} > changed_files.txt
        else
          # For push events, compare with previous commit
          git diff --name-only HEAD~1 HEAD > changed_files.txt
        fi
        echo "Changed files:"
        cat changed_files.txt
        
    - name: Review code with Gemini
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        # Create review script
        cat > review_script.js << 'EOF'
        const { GoogleGenerativeAI } = require('@google/generative-ai');
        const fs = require('fs');
        
        async function reviewCode() {
          const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
          const model = genAI.getGenerativeModel({ model: "gemini-pro" });
          
          const changedFiles = fs.readFileSync('changed_files.txt', 'utf8').split('\n').filter(file => file.trim());
          
          for (const file of changedFiles) {
            if (!file || !fs.existsSync(file)) continue;
            
            const content = fs.readFileSync(file, 'utf8');
            const prompt = "請協助進行程式碼審查。檔案: " + file + "\n\n程式碼內容:\n```\n" + content + "\n```\n\n請從以下角度進行審查：\n1. 程式碼品質與可讀性\n2. 潛在的安全問題\n3. 效能考量\n4. 最佳實踐建議\n5. 錯誤處理\n\n請提供具體的改進建議。";

            try {
              const result = await model.generateContent(prompt);
              const response = await result.response;
              const text = response.text();
              
              console.log("\n=== Code Review for " + file + " ===");
              console.log(text);
              console.log("================================\n");
              
              // Save review to file
              fs.appendFileSync('code_review_results.md', "## Code Review for " + file + "\n\n" + text + "\n\n");
            } catch (error) {
              console.error("Error reviewing " + file + ":", error);
            }
          }
        }
        
        reviewCode().catch(console.error);
        EOF
        
        # Run the review
        node review_script.js
        
    - name: Comment PR with review results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('code_review_results.md')) {
            const review = fs.readFileSync('code_review_results.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "## 🤖 Gemini AI Code Review\n\n" + review
            });
          }
          
    - name: Upload review results
      uses: actions/upload-artifact@v4
      with:
        name: code-review-results
        path: code_review_results.md
        if-no-files-found: ignore
